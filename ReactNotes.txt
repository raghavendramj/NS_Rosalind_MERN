What Is React?
React is a declarative, efficient, and flexible JavaScript library for building user interfaces. It lets you compose complex UIs from small and isolated pieces of code called “components”.

Why we use ReactJS?

The main objective of ReactJS is to develop User Interfaces (UI) that improves the speed of the apps. It uses virtual DOM (JavaScript object), which improves the performance of the app. 

The JavaScript virtual DOM is faster than the regular DOM. We can use ReactJS on the client and server-side as well as with other frameworks. It uses component and data patterns that improve readability and helps to maintain larger apps.


React Environment Setup

Pre-requisite for ReactJS

NodeJS and NPM
React and React DOM
Webpack
Babel


Ways to install ReactJS
There are two ways to set up an environment for successful ReactJS application. They are given below.

Using the npm command
cd /reactproject/
npm init -y
npm install react react-dom --save  
npm install webpack webpack-dev-server webpack-cli --save  
npm install babel-core babel-loader babel-preset-env babel-preset-react babel-webpack-plugin --save-dev  
These files are index.html, App.js, main.js, webpack.config.js and, .babelrc.

npm install react --save  
npm install react-dom --save  



Using the create-react-app command
Install NodeJS and NPM
Install React
	cd /reactproject/
	npm install -g create-react-app  
	create-react-app  newton-react-app


React Features
	JSX
		JSX stands for JavaScript XML.
	Components
		ReactJS is all about components. ReactJS application is made up of multiple components, and each component has its own logic and controls. These components can be reusable which help you to maintain the code when working on larger scale projects.
		
	One-way Data Binding
	Virtual DOM
	Simplicity
	Performance


